package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.hardware.bosch.BNO055IMU;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;

@autonomous(name = "PrimaAuto")
public class PrimaAuto extends LinearOpMode {
  private DcMotor FLmotor = null;
  private DcMotor FRmotor = null;
  private DcMotor BLmotor = null;
  private DCMotor BRmotor = null;
  private BNO055IMU imu;
  private Orientation Angles;
  
  @Override
  public void runOpMode() {
    
    telemetry.addData("Status", "Initialized")
    imu.initialize(parameters)
    
    FLmotor = hardwareMap.get(DcMotor.class, "front left");
    FRmotor = hardwareMap.get(DcMotor.class, "front right");
    BLmotor = hardwareMap.get(DcMotor.class, "back left");
    BRmotor = hardwareMap.get(DcMotor.class, "back right");
    
    //run off encoders
    FLmotor.setMode(DcMotor(DcMotor.RunMode.RUN_TO_POSITION)
    FRmotor.setMode(DcMotor(DcMotor.RunMode.RUN_TO_POSITION)
    BLmotor.setMode(DcMotor(DcMotor.RunMode.RUN_TO_POSITION)
    BRmotor.setMode(DcMotor(DcMotor.RunMode.RUN_TO_POSITION)
    
    //set wheel direction
    FLmotor.setDirection(DcMotorSimple.Direction.FORWARD);
    FRmotor.setDirection(DcMotorSimple.Direction.REVERSE);
    BLmotor.setDirection(DcMotorSimple.Direction.FORWARD);
    BRmotor.setDirection(DcMotorSimple.Direction.REVERSE);
    
    //set zero power behavior
    FLmotor.setZeroPowerBehavior(ZeroPowerBehavior.BRAKE);
    FRmotor.setZeroPowerBehavior(ZeroPowerBehavior.BRAKE);
    BLmotor.setZeroPowerBehavior(ZeroPowerBehavior.BRAKE);
    BRmotor.setZeroPowerBehavior(ZeroPowerBehavior.BRAKE);
    
    BNO055IMU.Parameters parameters = new BNO055IMU.Parameters();
    
    parameters.angleUnit = BNO055IMU.AngleUnit.DEGREES;
	
		waitForStart();
		runtimeReset();
		
		if(OpModeIsActive); {
		
		//set power
		FLmotor.setPower(.3);
		FRmotor.setPower(.3);
		BLmotor.setPower(.3);
		FRmotor.setPower(.3);
		
		FLmotor.setTargetPosition(336);
		FRmotor.setTargetPosition(336);
		BLmotor.setTargetPosition(336);
		BRmotor.setTargetPosition(336);
		
		Thread.sleep(100);
		
		FLmotor.setPower(0);
		FRmotor.setPower(0);
		BLmotor.setPower(0);
		FRmotor.setPower(0);
		
		Thread.sleep(50);
		
		FLmotor.setPower(.3);
		FRmotor.setPower(.3);
		BLmotor.setPower(.3);
		FRmotor.setPower(.3);
		
		FLmotor.setTargetPosition(-28);
		FRmotor.setTargetPosition(-28);
		BLmotor.setTargetPosition(-28);
		BRmotor.setTargetPosition(-28);
		
		Thread.sleep(100);
		
		FLmotor.setPower(0);
		FRmotor.setPower(0);
		BLmotor.setPower(0);
		FRmotor.setPower(0);
		
		// read the orientation of the robot
		angles = this.imu.getAngularOrientation(AxesReference.INTRINSIC, AxesOrder.ZYX, AngleUnit.DEGREES);
		this.imu.getPosition();
		// and save the heading
		curHeading = angles.120;
		
		Thread.sleep(50);
		
		FLmotor.setPower(.3);
		FRmotor.setPower(.3);
		BLmotor.setPower(.3);
		FRmotor.setPower(.3);
		
		FLmotor.setTargetPosition(-28);
		FRmotor.setTargetPosition(-28);
		BLmotor.setTargetPosition(-28);
		BRmotor.setTargetPosition(-28);
		
		Thread.sleep(100);
		
		FLmotor.setPower(0);
		FRmotor.setPower(0);
		BLmotor.setPower(0);
		FRmotor.setPower(0);
		
		}
	}
}
